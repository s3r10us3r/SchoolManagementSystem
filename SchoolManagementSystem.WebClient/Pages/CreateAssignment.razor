@page "/assignments/create/{LessonId:int}"
@inject IAssignmentsWebService AssignmentsWebService
@inject NavigationManager NavigationManager

<PageTitle>Create Assignment</PageTitle>

<div class="container">
    <h2 class="mb-4">Create Assignment</h2>

    <EditForm Model="NewAssignment" OnValidSubmit="SaveAssignment">
        <div class="form-group">
            <label>Name</label>
            <InputText class="form-control" @bind-Value="NewAssignment.Name" />
        </div>
        <div class="form-group">
            <label>Date</label>
            <InputDate class="form-control" @bind-Value="NewAssignment.Date" />
        </div>
        <button class="btn btn-success mt-2">Save</button>
        <button class="btn btn-secondary mt-2 ms-2" @onclick="Cancel">Cancel</button>
    </EditForm>
</div>

@code {
    [Parameter] public int LessonId { get; set; }
    private AssignmentDto NewAssignment { get; set; } = new();

    protected override void OnInitialized()
    {
        // Assign lesson ID from the route
        NewAssignment.LessonId = LessonId;
    }

    private async Task SaveAssignment()
    {
        var result = await AssignmentsWebService.Create(NewAssignment);
        if (result.IsSuccess)
        {
            NavigationManager.NavigateTo("/assignments/manage");
        }
        else 
        {
            Console.WriteLine(result.Message);
            Console.WriteLine(result.StatusCode);
        }
    }

    private void Cancel() => NavigationManager.NavigateTo("/dashboard");
}
